# Generated by Django 4.1.5 on 2023-04-24 20:26

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApplicationType',
            fields=[
                ('atid', models.CharField(max_length=48, primary_key=True, serialize=False, verbose_name='ATID')),
                ('name', models.CharField(max_length=128, verbose_name='Type Name')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('refresh_time', models.DateTimeField(auto_now=True, verbose_name='Refresh Time')),
            ],
        ),
        migrations.CreateModel(
            name='Chemical',
            fields=[
                ('chemid', models.CharField(max_length=48, primary_key=True, serialize=False, verbose_name='ChemID')),
                ('epa_reg_no', models.CharField(max_length=32, verbose_name='EPA Registration No.')),
                ('trade_name', models.CharField(max_length=128, verbose_name='Trade Name')),
                ('restricted_use', models.CharField(max_length=16, verbose_name='Restricted Use')),
                ('company', models.CharField(max_length=128, verbose_name='Company')),
                ('active_ingredient', models.CharField(max_length=256, verbose_name='Active Ingredient')),
                ('percent_ai', models.CharField(max_length=128, verbose_name='Active Ingredient Percent')),
                ('type', models.CharField(max_length=128, verbose_name='Product Type')),
                ('rei', models.CharField(max_length=32, verbose_name='REI')),
                ('phi', models.CharField(max_length=32, verbose_name='PHI')),
                ('labeled_crops', models.CharField(blank=True, max_length=256, null=True, verbose_name='Labeled Crops')),
                ('label_image', models.CharField(blank=True, max_length=128, null=True, verbose_name='Labeled Image')),
                ('imported_from', models.CharField(blank=True, max_length=32, null=True, verbose_name='Imported From')),
                ('validated_by', models.CharField(blank=True, max_length=32, null=True, verbose_name='Validated By')),
                ('entered_year', models.CharField(blank=True, max_length=32, null=True, verbose_name='Entered Year')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Update Time')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='Create Time')),
            ],
        ),
        migrations.CreateModel(
            name='ChemicalProductBase',
            fields=[
                ('chempbid', models.CharField(max_length=48, primary_key=True, serialize=False, verbose_name='ChemPBID')),
                ('product_id_dec', models.CharField(max_length=32, verbose_name='Product ID_DEC')),
                ('epa_reg_no_dec', models.CharField(max_length=32, verbose_name='EPA REG NO_DEC')),
                ('product_name_dec', models.CharField(max_length=256, verbose_name='Product Name_DEC')),
                ('restricted_use_dec', models.CharField(max_length=16, verbose_name='Restricted Use_DEC')),
                ('product_status_dec', models.CharField(max_length=32, verbose_name='Product Status_DEC')),
                ('company_code_dec', models.CharField(blank=True, max_length=32, null=True, verbose_name='Company Code_DEC')),
                ('company_name_dec', models.CharField(blank=True, max_length=128, null=True, verbose_name='Company Name_DEC')),
                ('pc_name_dec', models.TextField(blank=True, null=True, verbose_name='PC Name_DEC')),
                ('pc_pt_dec', models.CharField(blank=True, max_length=256, null=True, verbose_name='PC Pt_DEC')),
                ('product_type_dec', models.CharField(blank=True, max_length=256, null=True, verbose_name='Product Type_DEC')),
                ('product_use_dec', models.CharField(blank=True, max_length=256, null=True, verbose_name='Product Use_DEC')),
                ('epa_reg_no_epa', models.CharField(blank=True, max_length=32, null=True, verbose_name='EPA REG NO_EPA')),
                ('product_name_epa', models.CharField(blank=True, max_length=256, null=True, verbose_name='Product Name_EPA')),
                ('previous_reg_no_epa', models.TextField(blank=True, null=True, verbose_name='Previous Reg No_EPA')),
                ('distributor_reg_no_epa', models.TextField(blank=True, null=True, verbose_name='Distributor Reg No_EPA')),
                ('distributor_product_name_epa', models.TextField(blank=True, null=True, verbose_name='Distributor Product Name_EPA')),
                ('restricted_use_epa', models.CharField(blank=True, max_length=16, null=True, verbose_name='Restricted Use_EPA')),
                ('product_status_epa', models.CharField(blank=True, max_length=32, null=True, verbose_name='Product Status_EPA')),
                ('company_code_epa', models.CharField(blank=True, max_length=32, null=True, verbose_name='Company Code_EPA')),
                ('company_name_epa', models.CharField(blank=True, max_length=128, null=True, verbose_name='Company Name_EPA')),
                ('pc_name_epa', models.TextField(blank=True, null=True, verbose_name='PC Name_EPA')),
                ('pc_pt_epa', models.CharField(blank=True, max_length=256, null=True, verbose_name='PC Pt_EPA')),
                ('product_type_epa', models.CharField(blank=True, max_length=256, null=True, verbose_name='Product Type_EPA')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('refresh_time', models.DateTimeField(auto_now=True, verbose_name='Refresh Time')),
            ],
        ),
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('cid', models.CharField(max_length=48, primary_key=True, serialize=False, verbose_name='CID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Update Time')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='Create Time')),
            ],
        ),
        migrations.CreateModel(
            name='CropCategory',
            fields=[
                ('ccid', models.CharField(max_length=48, primary_key=True, serialize=False, verbose_name='CCID')),
                ('name', models.CharField(max_length=128, verbose_name='Crop Name')),
                ('crop_code', models.CharField(max_length=16, verbose_name='Crop Code')),
                ('category', models.CharField(max_length=128, verbose_name='Category Name')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('refresh_time', models.DateTimeField(auto_now=True, verbose_name='Refresh Time')),
            ],
        ),
        migrations.CreateModel(
            name='DecisionSupport',
            fields=[
                ('dsid', models.CharField(max_length=48, primary_key=True, serialize=False, verbose_name='DSID')),
                ('name', models.CharField(max_length=128, verbose_name='Decision Support')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('refresh_time', models.DateTimeField(auto_now=True, verbose_name='Refresh Time')),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentType',
            fields=[
                ('etid', models.CharField(max_length=48, primary_key=True, serialize=False, verbose_name='ETID')),
                ('name', models.CharField(max_length=32, verbose_name='Type Name')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='Create Time')),
            ],
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('opid', models.CharField(max_length=48, primary_key=True, serialize=False, verbose_name='OPID')),
                ('datetime', models.DateTimeField(auto_now=True, verbose_name='Operation Datetime')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Update Time')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='Create Time')),
            ],
        ),
        migrations.CreateModel(
            name='OperationType',
            fields=[
                ('optid', models.CharField(max_length=48, primary_key=True, serialize=False, verbose_name='OPTID')),
                ('name', models.CharField(max_length=128, verbose_name='Type Name')),
                ('multiple_records', models.BooleanField(default=False, verbose_name='Multiple Records')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('refresh_time', models.DateTimeField(auto_now=True, verbose_name='Refresh Time')),
            ],
        ),
        migrations.CreateModel(
            name='SiteType',
            fields=[
                ('stid', models.CharField(max_length=48, primary_key=True, serialize=False, verbose_name='STID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Type Name')),
                ('level', models.SmallIntegerField(verbose_name='Level')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('refresh_time', models.DateTimeField(auto_now=True, verbose_name='Refresh Time')),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('unitid', models.CharField(max_length=48, primary_key=True, serialize=False, verbose_name='UnitID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='Unit')),
                ('usage', models.CharField(max_length=64, verbose_name='Usage')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('refresh_time', models.DateTimeField(auto_now=True, verbose_name='Refresh Time')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('uid', models.CharField(max_length=48, primary_key=True, serialize=False, verbose_name='UID')),
                ('username', models.CharField(max_length=64, unique=True, verbose_name='Username')),
                ('password', models.CharField(max_length=128, verbose_name='Password')),
                ('name', models.CharField(blank=True, max_length=64, null=True, verbose_name='Actual Name')),
                ('business_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='Business Name')),
                ('registration_license_no', models.CharField(blank=True, max_length=256, null=True, verbose_name='Registration No/PesticideLicense No')),
                ('license_expire_date', models.DateField(blank=True, null=True, verbose_name='License Expire Date')),
                ('address', models.CharField(blank=True, max_length=256, null=True, verbose_name='Address')),
                ('city', models.CharField(blank=True, max_length=64, null=True, verbose_name='City')),
                ('county', models.CharField(blank=True, max_length=64, null=True, verbose_name='County')),
                ('state', models.CharField(blank=True, max_length=64, null=True, verbose_name='State')),
                ('zipcode', models.CharField(blank=True, max_length=16, null=True, verbose_name='Zip Code')),
                ('country', models.CharField(blank=True, max_length=64, null=True, verbose_name='Country')),
                ('phone', models.CharField(blank=True, max_length=16, null=True, verbose_name='Phone Number')),
                ('cell', models.CharField(blank=True, max_length=32, null=True, verbose_name='Cell Number')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('self_activated', models.BooleanField(default=False, verbose_name='Self Activated')),
                ('is_active', models.BooleanField(default=False, verbose_name='Is Active')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='Create Time')),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_added_by', to='api.user', verbose_name='Added By')),
            ],
        ),
        migrations.CreateModel(
            name='UserRelationType',
            fields=[
                ('urtid', models.CharField(max_length=48, primary_key=True, serialize=False, verbose_name='URTID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Type Name')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='Create Time')),
            ],
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('utid', models.CharField(max_length=48, primary_key=True, serialize=False, verbose_name='UTID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Type Name')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='Create Time')),
            ],
        ),
        migrations.CreateModel(
            name='UserRelation',
            fields=[
                ('urid', models.CharField(max_length=48, primary_key=True, serialize=False, verbose_name='URID')),
                ('is_resolved', models.BooleanField(default=False, verbose_name='Is Resolved')),
                ('is_active', models.BooleanField(default=False, verbose_name='Is Active')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='Create Time')),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='relation_added_by', to='api.user', verbose_name='Added By')),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='provider_user', to='api.user', verbose_name='Provider')),
                ('requester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requester_user', to='api.user', verbose_name='Requester')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='relationtype', to='api.userrelationtype', verbose_name='Relation Type')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_type', to='api.usertype', verbose_name='User Type'),
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('sid', models.CharField(max_length=48, primary_key=True, serialize=False, verbose_name='SID')),
                ('name', models.CharField(max_length=256, verbose_name='Site Name')),
                ('owner_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='Owner Name')),
                ('crop_year', models.CharField(blank=True, max_length=32, null=True, verbose_name='Crop Year')),
                ('size', models.CharField(blank=True, max_length=32, null=True, verbose_name='Size')),
                ('gps', models.CharField(blank=True, max_length=128, null=True, verbose_name='GPS')),
                ('gps_system', models.CharField(blank=True, max_length=64, null=True, verbose_name='GPS System')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Update Time')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='Create Time')),
                ('crop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='site_crop', to='api.crop', verbose_name='Crop')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='site_site', to='api.site', verbose_name='Parent Site')),
                ('size_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='site_unit', to='api.unit', verbose_name='Size Unit')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='site_type', to='api.sitetype', verbose_name='Type')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='site_user', to='api.user', verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseRecord',
            fields=[
                ('prid', models.CharField(max_length=48, primary_key=True, serialize=False, verbose_name='PRID')),
                ('cost_per_unit', models.CharField(max_length=32, verbose_name='Cost Per Unit')),
                ('amount', models.CharField(max_length=32, verbose_name='Amount')),
                ('total_cost', models.CharField(max_length=32, verbose_name='Total Cost')),
                ('pur_datetime', models.CharField(blank=True, max_length=64, null=True, verbose_name='Purchase Datetime')),
                ('operator', models.CharField(blank=True, max_length=64, null=True, verbose_name='Operator')),
                ('vendor', models.CharField(blank=True, max_length=64, null=True, verbose_name='Vendor')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Update Time')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='Create Time')),
                ('chemical', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pr_chem', to='api.chemical', verbose_name='Chemical')),
                ('opid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pr_op', to='api.operation', verbose_name='OPID')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pr_user', to='api.user', verbose_name='User')),
            ],
        ),
        migrations.AddField(
            model_name='operation',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='op_type', to='api.operationtype', verbose_name='Operation Type'),
        ),
        migrations.AddField(
            model_name='operation',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='op_user', to='api.user', verbose_name='User'),
        ),
        migrations.CreateModel(
            name='HarvestRecord',
            fields=[
                ('hrid', models.CharField(max_length=48, primary_key=True, serialize=False, verbose_name='HRID')),
                ('hr_area', models.CharField(max_length=32, verbose_name='Harvest Area')),
                ('rows', models.CharField(blank=True, max_length=32, null=True, verbose_name='Rows')),
                ('planting_date', models.CharField(blank=True, max_length=64, null=True, verbose_name='Planting Date')),
                ('bloom_date', models.CharField(blank=True, max_length=64, null=True, verbose_name='Bloom Date')),
                ('har_datetime', models.CharField(blank=True, max_length=64, null=True, verbose_name='Harvest Datetime')),
                ('operator', models.CharField(blank=True, max_length=64, null=True, verbose_name='Operator')),
                ('tracing_no', models.CharField(blank=True, max_length=128, null=True, verbose_name='Tracking No.')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Update Time')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='Create Time')),
                ('area_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hr_unit', to='api.unit', verbose_name='Area Unit')),
                ('crop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hr_crop', to='api.crop', verbose_name='Crop')),
                ('opid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hr_op', to='api.operation', verbose_name='OPID')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hr_site', to='api.site', verbose_name='Site')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hr_user', to='api.user', verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('eid', models.CharField(max_length=48, primary_key=True, serialize=False, verbose_name='EID')),
                ('name', models.CharField(max_length=64, verbose_name='Equipment Name')),
                ('owner', models.CharField(max_length=64, verbose_name='Owner Name')),
                ('code', models.CharField(blank=True, max_length=64, null=True, verbose_name='Code')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Update Time')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='Create Time')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='equip_user', to='api.user', verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='CropVariety',
            fields=[
                ('cvid', models.CharField(max_length=48, primary_key=True, serialize=False, verbose_name='CVID')),
                ('name', models.CharField(max_length=128, verbose_name='Crop Variety')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('refresh_time', models.DateTimeField(auto_now=True, verbose_name='Refresh Time')),
                ('crop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='variety_category', to='api.cropcategory', verbose_name='Crop')),
            ],
        ),
        migrations.CreateModel(
            name='CropGrowthStage',
            fields=[
                ('cgsid', models.CharField(max_length=48, primary_key=True, serialize=False, verbose_name='CGSID')),
                ('name', models.CharField(max_length=128, verbose_name='Stage Name')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('refresh_time', models.DateTimeField(auto_now=True, verbose_name='Refresh Time')),
                ('crop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='growth_stage_category', to='api.cropcategory', verbose_name='Crop')),
            ],
        ),
        migrations.AddField(
            model_name='crop',
            name='crop',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crop_category', to='api.cropcategory', verbose_name='Crop Name'),
        ),
        migrations.AddField(
            model_name='crop',
            name='growth_stage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crop_growth_stage', to='api.cropgrowthstage', verbose_name='Grow Stage'),
        ),
        migrations.AddField(
            model_name='crop',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crop_user', to='api.user', verbose_name='User'),
        ),
        migrations.AddField(
            model_name='crop',
            name='variety',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='crop_variety', to='api.cropvariety', verbose_name='Variety'),
        ),
        migrations.AddField(
            model_name='chemical',
            name='unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chem_unit', to='api.unit', verbose_name='Application Unit'),
        ),
        migrations.AddField(
            model_name='chemical',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chem_user', to='api.user', verbose_name='User'),
        ),
        migrations.CreateModel(
            name='ApplicationTarget',
            fields=[
                ('attid', models.CharField(max_length=48, primary_key=True, serialize=False, verbose_name='ATTID')),
                ('name', models.CharField(max_length=128, verbose_name='Application Target')),
                ('code', models.CharField(blank=True, max_length=16, null=True, verbose_name='Target Code ')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('refresh_time', models.DateTimeField(auto_now=True, verbose_name='Refresh Time')),
                ('crop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='application_category', to='api.cropcategory', verbose_name='Crop')),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationRecord',
            fields=[
                ('arid', models.CharField(max_length=48, primary_key=True, serialize=False, verbose_name='ARID')),
                ('applied_area', models.CharField(max_length=32, verbose_name='Applied Area')),
                ('app_date', models.CharField(blank=True, max_length=64, null=True, verbose_name='Application Date')),
                ('start_time', models.CharField(blank=True, max_length=64, null=True, verbose_name='Start Time')),
                ('finish_time', models.CharField(blank=True, max_length=64, null=True, verbose_name='Finish Time')),
                ('operator', models.CharField(blank=True, max_length=64, null=True, verbose_name='Operator')),
                ('water_use', models.CharField(blank=True, max_length=32, null=True, verbose_name='Water Use')),
                ('application_rate', models.CharField(max_length=32, verbose_name='Application Rate')),
                ('total_amount', models.CharField(max_length=32, verbose_name='Total Amount')),
                ('total_cost', models.CharField(max_length=32, verbose_name='Total Cost')),
                ('customer', models.CharField(blank=True, max_length=64, null=True, verbose_name='Customer')),
                ('wind_speed', models.CharField(blank=True, max_length=32, null=True, verbose_name='Wind Speed')),
                ('wind_direction', models.CharField(blank=True, max_length=32, null=True, verbose_name='Wind Direction')),
                ('average_temp', models.CharField(blank=True, max_length=32, null=True, verbose_name='Average Temperature')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='Update Time')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='Create Time')),
                ('amount_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ar_amount_opu', to='api.unit', verbose_name='Amount Unit')),
                ('area_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ar_area_unit', to='api.unit', verbose_name='Area Unit')),
                ('chemical_purchase', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ar_purchase', to='api.purchaserecord', verbose_name='Chemical Purchase')),
                ('crop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ar_crop', to='api.crop', verbose_name='Crop')),
                ('decision_support', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ar_decision_support', to='api.decisionsupport', verbose_name='Decision Support')),
                ('equipment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ar_equipment', to='api.equipment', verbose_name='Equipment')),
                ('opid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ar_op', to='api.operation', verbose_name='OPID')),
                ('rate_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ar_rate_unit', to='api.unit', verbose_name='Rate Unit')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ar_site', to='api.site', verbose_name='Site')),
                ('target', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ar_pd', to='api.applicationtarget', verbose_name='Application Target')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ar_type', to='api.applicationtype', verbose_name='Application Type')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ar_user', to='api.user', verbose_name='User')),
                ('water_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ar_water_unit', to='api.unit', verbose_name='Water Unit')),
            ],
        ),
    ]
