/*! For license information please see src_pages_SprayCard_SprayCardEdit_index_js.js.LICENSE.txt */
(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([["src_pages_SprayCard_SprayCardEdit_index_js"],{"./src/pages/SprayCard/SprayCardCreate/SprayCardForm.js":()=>{eval('throw new Error("Module build failed (from ./node_modules/babel-loader/lib/index.js):\\nSyntaxError: C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\src\\\\pages\\\\SprayCard\\\\SprayCardCreate\\\\SprayCardForm.js: Unexpected token (1009:12)\\n\\n\\u001b[0m \\u001b[90m 1007 |\\u001b[39m\\u001b[0m\\n\\u001b[0m \\u001b[90m 1008 |\\u001b[39m     \\u001b[36mconst\\u001b[39m saveResponsible \\u001b[33m=\\u001b[39m () \\u001b[33m=>\\u001b[39m {\\u001b[0m\\n\\u001b[0m\\u001b[31m\\u001b[1m>\\u001b[22m\\u001b[39m\\u001b[90m 1009 |\\u001b[39m         \\u001b[36mif\\u001b[39m () {\\u001b[0m\\n\\u001b[0m \\u001b[90m      |\\u001b[39m             \\u001b[31m\\u001b[1m^\\u001b[22m\\u001b[39m\\u001b[0m\\n\\u001b[0m \\u001b[90m 1010 |\\u001b[39m             setFormData({\\u001b[0m\\n\\u001b[0m \\u001b[90m 1011 |\\u001b[39m                 \\u001b[33m...\\u001b[39mformData\\u001b[33m,\\u001b[39m\\u001b[0m\\n\\u001b[0m \\u001b[90m 1012 |\\u001b[39m                 [field_names[\\u001b[35m4\\u001b[39m]]\\u001b[33m:\\u001b[39m fieldValues[field_names[\\u001b[35m4\\u001b[39m]]\\u001b[33m,\\u001b[39m\\u001b[0m\\n    at instantiate (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:63:32)\\n    at constructor (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:358:12)\\n    at JSXParserMixin.raise (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:3255:19)\\n    at JSXParserMixin.unexpected (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:3285:16)\\n    at JSXParserMixin.parseExprAtom (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:11284:16)\\n    at JSXParserMixin.parseExprAtom (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:6974:20)\\n    at JSXParserMixin.parseExprSubscripts (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10890:23)\\n    at JSXParserMixin.parseUpdate (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10873:21)\\n    at JSXParserMixin.parseMaybeUnary (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10849:23)\\n    at JSXParserMixin.parseMaybeUnaryOrPrivate (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10687:61)\\n    at JSXParserMixin.parseExprOps (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10692:23)\\n    at JSXParserMixin.parseMaybeConditional (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10669:23)\\n    at JSXParserMixin.parseMaybeAssign (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10630:21)\\n    at JSXParserMixin.parseExpressionBase (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10584:23)\\n    at C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10580:39\\n    at JSXParserMixin.allowInAnd (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:12275:16)\\n    at JSXParserMixin.parseExpression (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10580:17)\\n    at JSXParserMixin.parseHeaderExpression (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:12878:22)\\n    at JSXParserMixin.parseIfStatement (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:12984:22)\\n    at JSXParserMixin.parseStatementContent (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:12615:21)\\n    at JSXParserMixin.parseStatementLike (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:12584:17)\\n    at JSXParserMixin.parseStatementListItem (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:12564:17)\\n    at JSXParserMixin.parseBlockOrModuleBlockBody (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:13185:61)\\n    at JSXParserMixin.parseBlockBody (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:13178:10)\\n    at JSXParserMixin.parseBlock (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:13166:10)\\n    at JSXParserMixin.parseFunctionBody (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:11947:24)\\n    at JSXParserMixin.parseArrowExpression (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:11922:10)\\n    at JSXParserMixin.parseParenAndDistinguishExpression (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:11525:12)\\n    at JSXParserMixin.parseExprAtom (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:11164:23)\\n    at JSXParserMixin.parseExprAtom (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:6974:20)\\n    at JSXParserMixin.parseExprSubscripts (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10890:23)\\n    at JSXParserMixin.parseUpdate (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10873:21)\\n    at JSXParserMixin.parseMaybeUnary (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10849:23)\\n    at JSXParserMixin.parseMaybeUnaryOrPrivate (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10687:61)\\n    at JSXParserMixin.parseExprOps (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10692:23)\\n    at JSXParserMixin.parseMaybeConditional (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10669:23)\\n    at JSXParserMixin.parseMaybeAssign (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10630:21)\\n    at C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10600:39\\n    at JSXParserMixin.allowInAnd (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:12275:16)\\n    at JSXParserMixin.parseMaybeAssignAllowIn (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:10600:17)\\n    at JSXParserMixin.parseVar (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:13257:91)\\n    at JSXParserMixin.parseVarStatement (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:13096:10)\\n    at JSXParserMixin.parseStatementContent (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:12679:23)\\n    at JSXParserMixin.parseStatementLike (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:12584:17)\\n    at JSXParserMixin.parseStatementListItem (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:12564:17)\\n    at JSXParserMixin.parseBlockOrModuleBlockBody (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:13185:61)\\n    at JSXParserMixin.parseBlockBody (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:13178:10)\\n    at JSXParserMixin.parseBlock (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:13166:10)\\n    at JSXParserMixin.parseFunctionBody (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:11947:24)\\n    at JSXParserMixin.parseFunctionBodyAndFinish (C:\\\\Users\\\\Jacob Yu\\\\Desktop\\\\TracCloud_v2\\\\frontend\\\\node_modules\\\\@babel\\\\parser\\\\lib\\\\index.js:11933:10)");\n\n//# sourceURL=webpack://frontend/./src/pages/SprayCard/SprayCardCreate/SprayCardForm.js?')},"./src/pages/SprayCard/SprayCardEdit/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ SprayCardEdit)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _SprayCardCreate_SprayCardForm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../SprayCardCreate/SprayCardForm */ "./src/pages/SprayCard/SprayCardCreate/SprayCardForm.js");\n\n\n\nconst field_names = ["chemical_purchase", "decision_support", "crop", "target", "site", "assign_to", "applied_area", "gallons_water_rate", "application_rate", "partial_treatment", "alt_row_middle", "responsible_person"];\nfunction SprayCardEdit({\n  uid,\n  sprayData,\n  sprayOptions,\n  sprayCardContents,\n  refreshRecord,\n  editSprayCard,\n  setEditSprayCard,\n  setRefreshRecord,\n  setAssignSprayCard,\n  sprayCardSelected\n}) {\n  const initialFieldValues = field_names.reduce((acc, cur) => {\n    if ([field_names[5], field_names[11]].includes(cur)) {\n      acc[cur] = "";\n    } else {\n      acc[cur] = {};\n    }\n    return acc;\n  }, {});\n  const [fieldValues, setFieldValues] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialFieldValues);\n  const [selectedResponsible, setSelectedResponsible] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("");\n  const [mounted, setMounted] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const updateInitialEditFields = () => {\n    let initialFieldValues = field_names.reduce((acc, cur) => {\n      if ([field_names[5], field_names[11]].includes(cur)) {\n        acc[cur] = "";\n      } else {\n        acc[cur] = {};\n      }\n      return acc;\n    }, {});\n    if (sprayCardContents) {\n      const previousChemicalContents = [...new Map(sprayCardContents.map(item => [JSON.stringify(item.chemical_purchase), item.chemical_purchase])).values()];\n      const preGallonsWater = previousChemicalContents.map(item => sprayCardContents.find(spray => JSON.stringify(spray.chemical_purchase) === JSON.stringify(item)).gallons_water_rate);\n      const preApplicationRate = previousChemicalContents.map(item => sprayCardContents.find(spray => JSON.stringify(spray.chemical_purchase) === JSON.stringify(item)).application_rate);\n      const previousDecision = previousChemicalContents.map(item => sprayCardContents.find(spray => JSON.stringify(spray.chemical_purchase) === JSON.stringify(item)).decision_support);\n      for (let i = 0; i < previousChemicalContents.length; i++) {\n        initialFieldValues[field_names[0]][i] = previousChemicalContents[i];\n        initialFieldValues[field_names[1]][i] = previousDecision[i];\n        initialFieldValues[field_names[7]][i] = preGallonsWater[i];\n        initialFieldValues[field_names[8]][i] = preApplicationRate[i];\n      }\n      const previousCrops = [...new Map(sprayCardContents.map(item => [JSON.stringify(item.crop), item.crop])).values()];\n      const previousTargets = previousCrops.map(item => sprayCardContents.find(spray => JSON.stringify(spray.crop) === JSON.stringify(item)).target);\n      for (let i = 0; i < previousCrops.length; i++) {\n        initialFieldValues[field_names[2]][i] = previousCrops[i];\n        initialFieldValues[field_names[3]][i] = previousTargets[i];\n      }\n      const preSites = [...new Map(sprayCardContents.map(item => [JSON.stringify(item.site), item.site])).values()];\n      const preAppliedArea = preSites.map(item => sprayCardContents.find(spray => JSON.stringify(spray.site) === JSON.stringify(item)).applied_area);\n      const prePartialTreatment = preSites.map(item => sprayCardContents.find(spray => JSON.stringify(spray.site) === JSON.stringify(item)).partial_treatment);\n      const preAltRowMiddle = preSites.map(item => sprayCardContents.find(spray => JSON.stringify(spray.site) === JSON.stringify(item)).alt_row_middle);\n      for (let i = 0; i < preSites.length; i++) {\n        initialFieldValues[field_names[4]][i] = preSites[i];\n        initialFieldValues[field_names[6]][i] = preAppliedArea[i];\n        initialFieldValues[field_names[9]][i] = prePartialTreatment[i];\n        initialFieldValues[field_names[10]][i] = preAltRowMiddle[i];\n      }\n    }\n    setSelectedResponsible(sprayCardContents[0].responsible_person);\n    return initialFieldValues;\n  };\n  const sprayCardFormProps = {\n    uid,\n    openSprayCard: editSprayCard,\n    setOpenSprayCard: setEditSprayCard,\n    sprayData,\n    sprayOptions,\n    refreshRecord,\n    setRefreshRecord,\n    setAssignSprayCard,\n    sprayCardSelected,\n    setSprayCardSelected: null,\n    fieldValues,\n    setFieldValues,\n    initialFieldValues,\n    field_names,\n    mounted,\n    setMounted,\n    selectedResponsible,\n    setSelectedResponsible,\n    tag: "edit"\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (sprayCardContents.length > 0) {\n      setFieldValues(updateInitialEditFields());\n      setMounted(false);\n    }\n  }, [sprayCardContents]);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SprayCardCreate_SprayCardForm__WEBPACK_IMPORTED_MODULE_1__["default"], sprayCardFormProps);\n}\n\n//# sourceURL=webpack://frontend/./src/pages/SprayCard/SprayCardEdit/index.js?')}}]);