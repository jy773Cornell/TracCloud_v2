/*! For license information please see vendors-node_modules_mui_material_Autocomplete_Autocomplete_js.js.LICENSE.txt */
"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([["vendors-node_modules_mui_material_Autocomplete_Autocomplete_js"],{"./node_modules/@mui/base/useAutocomplete/useAutocomplete.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createFilterOptions: () => (/* binding */ createFilterOptions),\n/* harmony export */   \"default\": () => (/* binding */ useAutocomplete)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @mui/utils */ \"./node_modules/@mui/utils/esm/useId.js\");\n/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @mui/utils */ \"./node_modules/@mui/utils/esm/useControlled.js\");\n/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @mui/utils */ \"./node_modules/@mui/utils/esm/usePreviousProps.js\");\n/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @mui/utils */ \"./node_modules/@mui/utils/esm/useEventCallback.js\");\n/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @mui/utils */ \"./node_modules/@mui/utils/esm/setRef.js\");\n\n/* eslint-disable no-constant-condition */\n\n\n\n// https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\nfunction createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, {\n    inputValue,\n    getOptionLabel\n  }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n    const filteredOptions = !input ? options : options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n}\n\n// To replace with .findIndex() once we stop IE11 support.\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n  return -1;\n}\nconst defaultFilterOptions = createFilterOptions();\n\n// Number of options to jump in list box when `Page Up` and `Page Down` keys are used.\nconst pageSize = 5;\nconst defaultIsActiveElementInListbox = listboxRef => {\n  var _listboxRef$current$p;\n  return listboxRef.current !== null && ((_listboxRef$current$p = listboxRef.current.parentElement) == null ? void 0 : _listboxRef$current$p.contains(document.activeElement));\n};\nfunction useAutocomplete(props) {\n  const {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    unstable_isActiveElementInListbox = defaultIsActiveElementInListbox,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    unstable_classNamePrefix = 'Mui',\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled: disabledProp,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    isOptionEqualToValue = (option, value) => option === value,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    readOnly = false,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = (0,_mui_utils__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(idProp);\n  let getOptionLabel = getOptionLabelProp;\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n    if (typeof optionLabel !== 'string') {\n      if (true) {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`MUI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n      return String(optionLabel);\n    }\n    return optionLabel;\n  };\n  const ignoreFocus = react__WEBPACK_IMPORTED_MODULE_1__.useRef(false);\n  const firstFocus = react__WEBPACK_IMPORTED_MODULE_1__.useRef(true);\n  const inputRef = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null);\n  const listboxRef = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null);\n  const [anchorEl, setAnchorEl] = react__WEBPACK_IMPORTED_MODULE_1__.useState(null);\n  const [focusedTag, setFocusedTag] = react__WEBPACK_IMPORTED_MODULE_1__.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = react__WEBPACK_IMPORTED_MODULE_1__.useRef(defaultHighlighted);\n  const [value, setValueState] = (0,_mui_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = (0,_mui_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = react__WEBPACK_IMPORTED_MODULE_1__.useState(false);\n  const resetInputValue = react__WEBPACK_IMPORTED_MODULE_1__.useCallback((event, newValue) => {\n    // retain current `inputValue` if new option isn't selected and `clearOnBlur` is false\n    // When `multiple` is enabled, `newValue` is an array of all selected items including the newly selected item\n    const isOptionSelected = multiple ? value.length < newValue.length : newValue !== null;\n    if (!isOptionSelected && !clearOnBlur) {\n      return;\n    }\n    let newInputValue;\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n    if (inputValue === newInputValue) {\n      return;\n    }\n    setInputValueState(newInputValue);\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState, clearOnBlur, value]);\n  const [open, setOpenState] = (0,_mui_utils__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = react__WEBPACK_IMPORTED_MODULE_1__.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open && !readOnly;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && isOptionEqualToValue(option, value2))) {\n      return false;\n    }\n    return true;\n  }),\n  // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const previousProps = (0,_mui_utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"])({\n    filteredOptions,\n    value\n  });\n  react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n    const valueChange = value !== previousProps.value;\n    if (focused && !valueChange) {\n      return;\n    }\n\n    // Only reset the input's value when freeSolo if the component's value changes.\n    if (freeSolo && !valueChange) {\n      return;\n    }\n    resetInputValue(null, value);\n  }, [value, resetInputValue, focused, previousProps.value, freeSolo]);\n  const listboxAvailable = open && filteredOptions.length > 0 && !readOnly;\n  if (true) {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => isOptionEqualToValue(option, value2)));\n      if (missingValue.length > 0) {\n        console.warn([`MUI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `isOptionEqualToValue` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n  const focusTag = (0,_mui_utils__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  });\n\n  // Ensure the focusedTag is never inconsistent\n  react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n    let nextFocus = index;\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`);\n\n      // Same logic as MenuList.js\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n  const setHighlightedIndex = (0,_mui_utils__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(({\n    event,\n    index,\n    reason = 'auto'\n  }) => {\n    highlightedIndexRef.current = index;\n\n    // does the index exist?\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n    if (!listboxRef.current) {\n      return;\n    }\n    const prev = listboxRef.current.querySelector(`[role=\"option\"].${unstable_classNamePrefix}-focused`);\n    if (prev) {\n      prev.classList.remove(`${unstable_classNamePrefix}-focused`);\n      prev.classList.remove(`${unstable_classNamePrefix}-focusVisible`);\n    }\n    let listboxNode = listboxRef.current;\n    if (listboxRef.current.getAttribute('role') !== 'listbox') {\n      listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]');\n    }\n\n    // \"No results\"\n    if (!listboxNode) {\n      return;\n    }\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n    if (!option) {\n      return;\n    }\n    option.classList.add(`${unstable_classNamePrefix}-focused`);\n    if (reason === 'keyboard') {\n      option.classList.add(`${unstable_classNamePrefix}-focusVisible`);\n    }\n\n    // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/WAI/content-assets/wai-aria-practices/patterns/combobox/examples/js/select-only.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = (0,_mui_utils__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(({\n    event,\n    diff,\n    direction = 'next',\n    reason = 'auto'\n  }) => {\n    if (!popupOpen) {\n      return;\n    }\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n      if (diff === 'start') {\n        return 0;\n      }\n      if (diff === 'end') {\n        return maxIndex;\n      }\n      const newIndex = highlightedIndexRef.current + diff;\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n        return maxIndex;\n      }\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n        return 0;\n      }\n      return newIndex;\n    };\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    });\n\n    // Sync the content of the input with the highlighted option.\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option;\n\n        // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const checkHighlightedOptionExists = () => {\n    const isSameValue = (value1, value2) => {\n      const label1 = value1 ? getOptionLabel(value1) : '';\n      const label2 = value2 ? getOptionLabel(value2) : '';\n      return label1 === label2;\n    };\n    if (highlightedIndexRef.current !== -1 && previousProps.filteredOptions && previousProps.filteredOptions.length !== filteredOptions.length && (multiple ? value.length === previousProps.value.length && previousProps.value.every((val, i) => getOptionLabel(value[i]) === getOptionLabel(val)) : isSameValue(previousProps.value, value))) {\n      const previousHighlightedOption = previousProps.filteredOptions[highlightedIndexRef.current];\n      if (previousHighlightedOption) {\n        const previousHighlightedOptionExists = filteredOptions.some(option => {\n          return getOptionLabel(option) === getOptionLabel(previousHighlightedOption);\n        });\n        if (previousHighlightedOptionExists) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  const syncHighlightedIndex = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    // Check if the previously highlighted option still exists in the updated filtered options list and if the value hasn't changed\n    // If it exists and the value hasn't changed, return, otherwise continue execution\n    if (checkHighlightedOptionExists()) {\n      return;\n    }\n    const valueItem = multiple ? value[0] : value;\n\n    // The popup is empty, reset\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n    if (!listboxRef.current) {\n      return;\n    }\n\n    // Synchronize the value with the highlighted index\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current];\n\n      // Keep the current highlighted index if possible\n      if (multiple && currentOption && findIndex(value, val => isOptionEqualToValue(currentOption, val)) !== -1) {\n        return;\n      }\n      const itemIndex = findIndex(filteredOptions, optionItem => isOptionEqualToValue(optionItem, valueItem));\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n      return;\n    }\n\n    // Prevent the highlighted index to leak outside the boundaries.\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    }\n\n    // Restore the focus to the previous index.\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    });\n    // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n  // Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length,\n  // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = (0,_mui_utils__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(node => {\n    (0,_mui_utils__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(listboxRef, node);\n    if (!node) {\n      return;\n    }\n    syncHighlightedIndex();\n  });\n  if (true) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        if (inputRef.current && inputRef.current.nodeName === 'TEXTAREA') {\n          console.warn([`A textarea element was provided to ${componentName} where input was expected.`, `This is not a supported scenario but it may work under certain conditions.`, `A textarea keyboard navigation may conflict with Autocomplete controls (e.g. enter and arrow keys).`, `Make sure to test keyboard navigation and add custom event handlers if necessary.`].join('\\n'));\n        } else {\n          console.error([`MUI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have bound getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n        }\n      }\n    }, [componentName]);\n  }\n  react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n    setOpenState(true);\n    setInputPristine(true);\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n    setOpenState(false);\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n  const handleValue = (event, newValue, reason, details) => {\n    if (multiple) {\n      if (value.length === newValue.length && value.every((val, i) => val === newValue[i])) {\n        return;\n      }\n    } else if (value === newValue) {\n      return;\n    }\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n    setValueState(newValue);\n  };\n  const isTouch = react__WEBPACK_IMPORTED_MODULE_1__.useRef(false);\n  const selectNewValue = (event, option, reasonProp = 'selectOption', origin = 'options') => {\n    let reason = reasonProp;\n    let newValue = option;\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      if (true) {\n        const matches = newValue.filter(val => isOptionEqualToValue(option, val));\n        if (matches.length > 1) {\n          console.error([`MUI: The \\`isOptionEqualToValue\\` method of ${componentName} does not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n      const itemIndex = findIndex(newValue, valueItem => isOptionEqualToValue(option, valueItem));\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n    if (!disableCloseOnSelect && (!event || !event.ctrlKey && !event.metaKey)) {\n      handleClose(event, reason);\n    }\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n    let nextFocus = index;\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`);\n\n      // Same logic as MenuList.js\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n    if (inputValue === '') {\n      handleClose(event, 'toggleInput');\n    }\n    let nextTag = focusedTag;\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n\n    // Wait until IME is settled.\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n          break;\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n          break;\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n\n            // Avoid early form validation, let the end-users continue filling the form.\n            event.preventDefault();\n            if (disabled) {\n              return;\n            }\n            selectNewValue(event, option, 'selectOption');\n\n            // Move the selection to the end.\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n          }\n          break;\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault();\n            // Avoid the Modal to handle the event.\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault();\n            // Avoid the Modal to handle the event.\n            event.stopPropagation();\n            handleClear(event);\n          }\n          break;\n        case 'Backspace':\n          if (multiple && !readOnly && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n          break;\n        case 'Delete':\n          if (multiple && !readOnly && inputValue === '' && value.length > 0 && focusedTag !== -1) {\n            const index = focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n          break;\n        default:\n      }\n    }\n  };\n  const handleFocus = event => {\n    setFocused(true);\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (unstable_isActiveElementInListbox(listboxRef)) {\n      inputRef.current.focus();\n      return;\n    }\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n    handleClose(event, 'blur');\n  };\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n  const handleOptionMouseMove = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    if (highlightedIndexRef.current !== index) {\n      setHighlightedIndex({\n        event,\n        index,\n        reason: 'mouse'\n      });\n    }\n  };\n  const handleOptionTouchStart = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'touch'\n    });\n    isTouch.current = true;\n  };\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'removeOption', {\n      option: value[index]\n    });\n  };\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  // Prevent input blur when interacting with the combobox\n  const handleMouseDown = event => {\n    // Prevent focusing the input if click is anywhere outside the Autocomplete\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  };\n\n  // Focus the input when interacting with the combobox\n  const handleClick = event => {\n    // Prevent focusing the input if click is anywhere outside the Autocomplete\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n    inputRef.current.focus();\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n    firstFocus.current = false;\n  };\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (true) {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`MUI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n          indexBy.set(group, true);\n        }\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n      return acc;\n    }, []);\n  }\n  if (disabledProp && focused) {\n    handleBlur();\n  }\n  return {\n    getRootProps: (other = {}) => (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n      'aria-owns': listboxAvailable ? `${id}-listbox` : null\n    }, other, {\n      onKeyDown: handleKeyDown(other),\n      onMouseDown: handleMouseDown,\n      onClick: handleClick\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperatively so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : undefined,\n      'aria-expanded': listboxAvailable,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false',\n      role: 'combobox',\n      disabled: disabledProp\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: ({\n      index\n    }) => (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1\n    }, !readOnly && {\n      onDelete: handleTagDelete(index)\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: ({\n      index,\n      option\n    }) => {\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && isOptionEqualToValue(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseMove: handleOptionMouseMove,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    expanded: popupOpen && anchorEl,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}\n\n//# sourceURL=webpack://frontend/./node_modules/@mui/base/useAutocomplete/useAutocomplete.js?")},"./node_modules/@mui/material/Autocomplete/Autocomplete.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createFilterOptions: () => (/* reexport safe */ _mui_base__WEBPACK_IMPORTED_MODULE_18__.createFilterOptions),\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_24__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! clsx */ "./node_modules/clsx/dist/clsx.m.js");\n/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @mui/utils */ "./node_modules/@mui/utils/esm/chainPropTypes.js");\n/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @mui/utils */ "./node_modules/@mui/utils/esm/integerPropType.js");\n/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @mui/base */ "./node_modules/@mui/utils/esm/composeClasses/composeClasses.js");\n/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @mui/base */ "./node_modules/@mui/base/useAutocomplete/useAutocomplete.js");\n/* harmony import */ var _mui_system__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @mui/system */ "./node_modules/@mui/system/esm/colorManipulator.js");\n/* harmony import */ var _Popper__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../Popper */ "./node_modules/@mui/material/Popper/Popper.js");\n/* harmony import */ var _ListSubheader__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../ListSubheader */ "./node_modules/@mui/material/ListSubheader/ListSubheader.js");\n/* harmony import */ var _Paper__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../Paper */ "./node_modules/@mui/material/Paper/Paper.js");\n/* harmony import */ var _IconButton__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../IconButton */ "./node_modules/@mui/material/IconButton/IconButton.js");\n/* harmony import */ var _Chip__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../Chip */ "./node_modules/@mui/material/Chip/Chip.js");\n/* harmony import */ var _Input_inputClasses__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Input/inputClasses */ "./node_modules/@mui/material/Input/inputClasses.js");\n/* harmony import */ var _InputBase_inputBaseClasses__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../InputBase/inputBaseClasses */ "./node_modules/@mui/material/InputBase/inputBaseClasses.js");\n/* harmony import */ var _OutlinedInput_outlinedInputClasses__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../OutlinedInput/outlinedInputClasses */ "./node_modules/@mui/material/OutlinedInput/outlinedInputClasses.js");\n/* harmony import */ var _FilledInput_filledInputClasses__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../FilledInput/filledInputClasses */ "./node_modules/@mui/material/FilledInput/filledInputClasses.js");\n/* harmony import */ var _internal_svg_icons_Close__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../internal/svg-icons/Close */ "./node_modules/@mui/material/internal/svg-icons/Close.js");\n/* harmony import */ var _internal_svg_icons_ArrowDropDown__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../internal/svg-icons/ArrowDropDown */ "./node_modules/@mui/material/internal/svg-icons/ArrowDropDown.js");\n/* harmony import */ var _styles_useThemeProps__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../styles/useThemeProps */ "./node_modules/@mui/material/styles/useThemeProps.js");\n/* harmony import */ var _styles_styled__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../styles/styled */ "./node_modules/@mui/material/styles/styled.js");\n/* harmony import */ var _autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./autocompleteClasses */ "./node_modules/@mui/material/Autocomplete/autocompleteClasses.js");\n/* harmony import */ var _utils_capitalize__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/capitalize */ "./node_modules/@mui/material/utils/capitalize.js");\n/* harmony import */ var _utils_useForkRef__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../utils/useForkRef */ "./node_modules/@mui/material/utils/useForkRef.js");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");\n\n\nvar _ClearIcon, _ArrowDropDownIcon;\nconst _excluded = ["autoComplete", "autoHighlight", "autoSelect", "blurOnSelect", "ChipProps", "className", "clearIcon", "clearOnBlur", "clearOnEscape", "clearText", "closeText", "componentsProps", "defaultValue", "disableClearable", "disableCloseOnSelect", "disabled", "disabledItemsFocusable", "disableListWrap", "disablePortal", "filterOptions", "filterSelectedOptions", "forcePopupIcon", "freeSolo", "fullWidth", "getLimitTagsText", "getOptionDisabled", "getOptionLabel", "isOptionEqualToValue", "groupBy", "handleHomeEndKeys", "id", "includeInputInList", "inputValue", "limitTags", "ListboxComponent", "ListboxProps", "loading", "loadingText", "multiple", "noOptionsText", "onChange", "onClose", "onHighlightChange", "onInputChange", "onOpen", "open", "openOnFocus", "openText", "options", "PaperComponent", "PopperComponent", "popupIcon", "readOnly", "renderGroup", "renderInput", "renderOption", "renderTags", "selectOnFocus", "size", "slotProps", "value"],\n  _excluded2 = ["ref"];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePortal,\n    expanded,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = ownerState;\n  const slots = {\n    root: [\'root\', expanded && \'expanded\', focused && \'focused\', fullWidth && \'fullWidth\', hasClearIcon && \'hasClearIcon\', hasPopupIcon && \'hasPopupIcon\'],\n    inputRoot: [\'inputRoot\'],\n    input: [\'input\', inputFocused && \'inputFocused\'],\n    tag: [\'tag\', `tagSize${(0,_utils_capitalize__WEBPACK_IMPORTED_MODULE_5__["default"])(size)}`],\n    endAdornment: [\'endAdornment\'],\n    clearIndicator: [\'clearIndicator\'],\n    popupIndicator: [\'popupIndicator\', popupOpen && \'popupIndicatorOpen\'],\n    popper: [\'popper\', disablePortal && \'popperDisablePortal\'],\n    paper: [\'paper\'],\n    listbox: [\'listbox\'],\n    loading: [\'loading\'],\n    noOptions: [\'noOptions\'],\n    option: [\'option\'],\n    groupLabel: [\'groupLabel\'],\n    groupUl: [\'groupUl\']\n  };\n  return (0,_mui_base__WEBPACK_IMPORTED_MODULE_6__["default"])(slots, _autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__.getAutocompleteUtilityClass, classes);\n};\nconst AutocompleteRoot = (0,_styles_styled__WEBPACK_IMPORTED_MODULE_8__["default"])(\'div\', {\n  name: \'MuiAutocomplete\',\n  slot: \'Root\',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = ownerState;\n    return [{\n      [`& .${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].tag}`]: styles.tag\n    }, {\n      [`& .${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].tag}`]: styles[`tagSize${(0,_utils_capitalize__WEBPACK_IMPORTED_MODULE_5__["default"])(size)}`]\n    }, {\n      [`& .${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].inputRoot}`]: styles.inputRoot\n    }, {\n      [`& .${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].input}`]: styles.input\n    }, {\n      [`& .${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].input}`]: inputFocused && styles.inputFocused\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})(({\n  ownerState\n}) => (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({\n  [`&.${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].focused} .${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].clearIndicator}`]: {\n    visibility: \'visible\'\n  },\n  /* Avoid double tap issue on iOS */\n  \'@media (pointer: fine)\': {\n    [`&:hover .${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].clearIndicator}`]: {\n      visibility: \'visible\'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: \'100%\'\n}, {\n  [`& .${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].tag}`]: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({\n    margin: 3,\n    maxWidth: \'calc(100% - 6px)\'\n  }, ownerState.size === \'small\' && {\n    margin: 2,\n    maxWidth: \'calc(100% - 4px)\'\n  }),\n  [`& .${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].inputRoot}`]: {\n    flexWrap: \'wrap\',\n    [`.${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].hasPopupIcon}&, .${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].hasPopupIcon}.${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].input}`]: {\n      width: 0,\n      minWidth: 30\n    }\n  },\n  [`& .${_Input_inputClasses__WEBPACK_IMPORTED_MODULE_9__["default"].root}`]: {\n    paddingBottom: 1,\n    \'& .MuiInput-input\': {\n      padding: \'4px 4px 4px 0px\'\n    }\n  },\n  [`& .${_Input_inputClasses__WEBPACK_IMPORTED_MODULE_9__["default"].root}.${_InputBase_inputBaseClasses__WEBPACK_IMPORTED_MODULE_10__["default"].sizeSmall}`]: {\n    [`& .${_Input_inputClasses__WEBPACK_IMPORTED_MODULE_9__["default"].input}`]: {\n      padding: \'2px 4px 3px 0\'\n    }\n  },\n  [`& .${_OutlinedInput_outlinedInputClasses__WEBPACK_IMPORTED_MODULE_11__["default"].root}`]: {\n    padding: 9,\n    [`.${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].hasPopupIcon}&, .${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].hasPopupIcon}.${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].input}`]: {\n      padding: \'7.5px 4px 7.5px 5px\'\n    },\n    [`& .${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${_OutlinedInput_outlinedInputClasses__WEBPACK_IMPORTED_MODULE_11__["default"].root}.${_InputBase_inputBaseClasses__WEBPACK_IMPORTED_MODULE_10__["default"].sizeSmall}`]: {\n    // Don\'t specify paddingRight, as it overrides the default value set when there is only\n    // one of the popup or clear icon as the specificity is equal so the latter one wins\n    paddingTop: 6,\n    paddingBottom: 6,\n    paddingLeft: 6,\n    [`& .${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].input}`]: {\n      padding: \'2.5px 4px 2.5px 8px\'\n    }\n  },\n  [`& .${_FilledInput_filledInputClasses__WEBPACK_IMPORTED_MODULE_12__["default"].root}`]: {\n    paddingTop: 19,\n    paddingLeft: 8,\n    [`.${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].hasPopupIcon}&, .${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].hasPopupIcon}.${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${_FilledInput_filledInputClasses__WEBPACK_IMPORTED_MODULE_12__["default"].input}`]: {\n      padding: \'7px 4px\'\n    },\n    [`& .${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${_FilledInput_filledInputClasses__WEBPACK_IMPORTED_MODULE_12__["default"].root}.${_InputBase_inputBaseClasses__WEBPACK_IMPORTED_MODULE_10__["default"].sizeSmall}`]: {\n    paddingBottom: 1,\n    [`& .${_FilledInput_filledInputClasses__WEBPACK_IMPORTED_MODULE_12__["default"].input}`]: {\n      padding: \'2.5px 4px\'\n    }\n  },\n  [`& .${_InputBase_inputBaseClasses__WEBPACK_IMPORTED_MODULE_10__["default"].hiddenLabel}`]: {\n    paddingTop: 8\n  },\n  [`& .${_FilledInput_filledInputClasses__WEBPACK_IMPORTED_MODULE_12__["default"].root}.${_InputBase_inputBaseClasses__WEBPACK_IMPORTED_MODULE_10__["default"].hiddenLabel}`]: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    [`& .${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].input}`]: {\n      paddingTop: 16,\n      paddingBottom: 17\n    }\n  },\n  [`& .${_FilledInput_filledInputClasses__WEBPACK_IMPORTED_MODULE_12__["default"].root}.${_InputBase_inputBaseClasses__WEBPACK_IMPORTED_MODULE_10__["default"].hiddenLabel}.${_InputBase_inputBaseClasses__WEBPACK_IMPORTED_MODULE_10__["default"].sizeSmall}`]: {\n    [`& .${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].input}`]: {\n      paddingTop: 8,\n      paddingBottom: 9\n    }\n  },\n  [`& .${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].input}`]: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({\n    flexGrow: 1,\n    textOverflow: \'ellipsis\',\n    opacity: 0\n  }, ownerState.inputFocused && {\n    opacity: 1\n  })\n}));\nconst AutocompleteEndAdornment = (0,_styles_styled__WEBPACK_IMPORTED_MODULE_8__["default"])(\'div\', {\n  name: \'MuiAutocomplete\',\n  slot: \'EndAdornment\',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  // We use a position absolute to support wrapping tags.\n  position: \'absolute\',\n  right: 0,\n  top: \'calc(50% - 14px)\' // Center vertically\n});\n\nconst AutocompleteClearIndicator = (0,_styles_styled__WEBPACK_IMPORTED_MODULE_8__["default"])(_IconButton__WEBPACK_IMPORTED_MODULE_13__["default"], {\n  name: \'MuiAutocomplete\',\n  slot: \'ClearIndicator\',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: \'hidden\'\n});\nconst AutocompletePopupIndicator = (0,_styles_styled__WEBPACK_IMPORTED_MODULE_8__["default"])(_IconButton__WEBPACK_IMPORTED_MODULE_13__["default"], {\n  name: \'MuiAutocomplete\',\n  slot: \'PopupIndicator\',\n  overridesResolver: ({\n    ownerState\n  }, styles) => (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, styles.popupIndicator, ownerState.popupOpen && styles.popupIndicatorOpen)\n})(({\n  ownerState\n}) => (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({\n  padding: 2,\n  marginRight: -2\n}, ownerState.popupOpen && {\n  transform: \'rotate(180deg)\'\n}));\nconst AutocompletePopper = (0,_styles_styled__WEBPACK_IMPORTED_MODULE_8__["default"])(_Popper__WEBPACK_IMPORTED_MODULE_14__["default"], {\n  name: \'MuiAutocomplete\',\n  slot: \'Popper\',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].option}`]: styles.option\n    }, styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(({\n  theme,\n  ownerState\n}) => (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({\n  zIndex: (theme.vars || theme).zIndex.modal\n}, ownerState.disablePortal && {\n  position: \'absolute\'\n}));\nconst AutocompletePaper = (0,_styles_styled__WEBPACK_IMPORTED_MODULE_8__["default"])(_Paper__WEBPACK_IMPORTED_MODULE_15__["default"], {\n  name: \'MuiAutocomplete\',\n  slot: \'Paper\',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, theme.typography.body1, {\n  overflow: \'auto\'\n}));\nconst AutocompleteLoading = (0,_styles_styled__WEBPACK_IMPORTED_MODULE_8__["default"])(\'div\', {\n  name: \'MuiAutocomplete\',\n  slot: \'Loading\',\n  overridesResolver: (props, styles) => styles.loading\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: \'14px 16px\'\n}));\nconst AutocompleteNoOptions = (0,_styles_styled__WEBPACK_IMPORTED_MODULE_8__["default"])(\'div\', {\n  name: \'MuiAutocomplete\',\n  slot: \'NoOptions\',\n  overridesResolver: (props, styles) => styles.noOptions\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: \'14px 16px\'\n}));\nconst AutocompleteListbox = (0,_styles_styled__WEBPACK_IMPORTED_MODULE_8__["default"])(\'div\', {\n  name: \'MuiAutocomplete\',\n  slot: \'Listbox\',\n  overridesResolver: (props, styles) => styles.listbox\n})(({\n  theme\n}) => ({\n  listStyle: \'none\',\n  margin: 0,\n  padding: \'8px 0\',\n  maxHeight: \'40vh\',\n  overflow: \'auto\',\n  position: \'relative\',\n  [`& .${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].option}`]: {\n    minHeight: 48,\n    display: \'flex\',\n    overflow: \'hidden\',\n    justifyContent: \'flex-start\',\n    alignItems: \'center\',\n    cursor: \'pointer\',\n    paddingTop: 6,\n    boxSizing: \'border-box\',\n    outline: \'0\',\n    WebkitTapHighlightColor: \'transparent\',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up(\'sm\')]: {\n      minHeight: \'auto\'\n    },\n    [`&.${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].focused}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.hover,\n      // Reset on touch devices, it doesn\'t add specificity\n      \'@media (hover: none)\': {\n        backgroundColor: \'transparent\'\n      }\n    },\n    \'&[aria-disabled="true"]\': {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      pointerEvents: \'none\'\n    },\n    [`&.${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    \'&[aria-selected="true"]\': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : (0,_mui_system__WEBPACK_IMPORTED_MODULE_16__.alpha)(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      [`&.${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].focused}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : (0,_mui_system__WEBPACK_IMPORTED_MODULE_16__.alpha)(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn\'t add specificity\n        \'@media (hover: none)\': {\n          backgroundColor: (theme.vars || theme).palette.action.selected\n        }\n      },\n      [`&.${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].focusVisible}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : (0,_mui_system__WEBPACK_IMPORTED_MODULE_16__.alpha)(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    }\n  }\n}));\nconst AutocompleteGroupLabel = (0,_styles_styled__WEBPACK_IMPORTED_MODULE_8__["default"])(_ListSubheader__WEBPACK_IMPORTED_MODULE_17__["default"], {\n  name: \'MuiAutocomplete\',\n  slot: \'GroupLabel\',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  top: -8\n}));\nconst AutocompleteGroupUl = (0,_styles_styled__WEBPACK_IMPORTED_MODULE_8__["default"])(\'ul\', {\n  name: \'MuiAutocomplete\',\n  slot: \'GroupUl\',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  padding: 0,\n  [`& .${_autocompleteClasses__WEBPACK_IMPORTED_MODULE_7__["default"].option}`]: {\n    paddingLeft: 24\n  }\n});\n\nconst Autocomplete = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.forwardRef(function Autocomplete(inProps, ref) {\n  var _slotProps$clearIndic, _slotProps$paper, _slotProps$popper, _slotProps$popupIndic;\n  const props = (0,_styles_useThemeProps__WEBPACK_IMPORTED_MODULE_19__["default"])({\n    props: inProps,\n    name: \'MuiAutocomplete\'\n  });\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  const {\n      autoComplete = false,\n      autoHighlight = false,\n      autoSelect = false,\n      blurOnSelect = false,\n      ChipProps,\n      className,\n      clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_internal_svg_icons_Close__WEBPACK_IMPORTED_MODULE_20__["default"], {\n        fontSize: "small"\n      })),\n      clearOnBlur = !props.freeSolo,\n      clearOnEscape = false,\n      clearText = \'Clear\',\n      closeText = \'Close\',\n      componentsProps = {},\n      defaultValue = props.multiple ? [] : null,\n      disableClearable = false,\n      disableCloseOnSelect = false,\n      disabled = false,\n      disabledItemsFocusable = false,\n      disableListWrap = false,\n      disablePortal = false,\n      filterSelectedOptions = false,\n      forcePopupIcon = \'auto\',\n      freeSolo = false,\n      fullWidth = false,\n      getLimitTagsText = more => `+${more}`,\n      getOptionLabel = option => {\n        var _option$label;\n        return (_option$label = option.label) != null ? _option$label : option;\n      },\n      groupBy,\n      handleHomeEndKeys = !props.freeSolo,\n      includeInputInList = false,\n      limitTags = -1,\n      ListboxComponent = \'ul\',\n      ListboxProps,\n      loading = false,\n      loadingText = \'Loading…\',\n      multiple = false,\n      noOptionsText = \'No options\',\n      openOnFocus = false,\n      openText = \'Open\',\n      PaperComponent = _Paper__WEBPACK_IMPORTED_MODULE_15__["default"],\n      PopperComponent = _Popper__WEBPACK_IMPORTED_MODULE_14__["default"],\n      popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_internal_svg_icons_ArrowDropDown__WEBPACK_IMPORTED_MODULE_21__["default"], {})),\n      readOnly = false,\n      renderGroup: renderGroupProp,\n      renderInput,\n      renderOption: renderOptionProp,\n      renderTags,\n      selectOnFocus = !props.freeSolo,\n      size = \'medium\',\n      slotProps = {}\n    } = props,\n    other = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(props, _excluded);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    expanded,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = (0,_mui_base__WEBPACK_IMPORTED_MODULE_18__["default"])((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {\n    componentName: \'Autocomplete\'\n  }));\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n  const {\n    onMouseDown: handleInputMouseDown\n  } = getInputProps();\n  const {\n    ref: externalListboxRef\n  } = ListboxProps != null ? ListboxProps : {};\n  const _getListboxProps = getListboxProps(),\n    {\n      ref: listboxRef\n    } = _getListboxProps,\n    otherListboxProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(_getListboxProps, _excluded2);\n  const combinedListboxRef = (0,_utils_useForkRef__WEBPACK_IMPORTED_MODULE_22__["default"])(listboxRef, externalListboxRef);\n\n  // If you modify this, make sure to keep the `AutocompleteOwnerState` type in sync.\n  const ownerState = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {\n    disablePortal,\n    expanded,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  let startAdornment;\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({\n      className: classes.tag,\n      disabled\n    }, getTagProps(params));\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps, ownerState);\n    } else {\n      startAdornment = value.map((option, index) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_Chip__WEBPACK_IMPORTED_MODULE_23__["default"], (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({\n        label: getOptionLabel(option),\n        size: size\n      }, getCustomizedTagProps({\n        index\n      }), ChipProps)));\n    }\n  }\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("span", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n  const defaultRenderGroup = params => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("li", {\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      ownerState: ownerState,\n      component: "div",\n      children: params.group\n    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      ownerState: ownerState,\n      children: params.children\n    })]\n  }, params.key);\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n  const defaultRenderOption = (props2, option) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("li", (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props2, {\n    children: getOptionLabel(option)\n  }));\n  const renderOption = renderOptionProp || defaultRenderOption;\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps[\'aria-selected\'],\n      index,\n      inputValue\n    });\n  };\n  const clearIndicatorSlotProps = (_slotProps$clearIndic = slotProps.clearIndicator) != null ? _slotProps$clearIndic : componentsProps.clearIndicator;\n  const paperSlotProps = (_slotProps$paper = slotProps.paper) != null ? _slotProps$paper : componentsProps.paper;\n  const popperSlotProps = (_slotProps$popper = slotProps.popper) != null ? _slotProps$popper : componentsProps.popper;\n  const popupIndicatorSlotProps = (_slotProps$popupIndic = slotProps.popupIndicator) != null ? _slotProps$popupIndic : componentsProps.popupIndicator;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(react__WEBPACK_IMPORTED_MODULE_2__.Fragment, {\n    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(AutocompleteRoot, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({\n      ref: ref,\n      className: (0,clsx__WEBPACK_IMPORTED_MODULE_3__["default"])(classes.root, className),\n      ownerState: ownerState\n    }, getRootProps(other), {\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === \'small\' ? \'small\' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment,\n          onClick: event => {\n            if (event.target === event.currentTarget) {\n              handleInputMouseDown(event);\n            }\n          }\n        }, (hasClearIcon || hasPopupIcon) && {\n          endAdornment: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            ownerState: ownerState,\n            children: [hasClearIcon ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(AutocompleteClearIndicator, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, getClearProps(), {\n              "aria-label": clearText,\n              title: clearText,\n              ownerState: ownerState\n            }, clearIndicatorSlotProps, {\n              className: (0,clsx__WEBPACK_IMPORTED_MODULE_3__["default"])(classes.clearIndicator, clearIndicatorSlotProps == null ? void 0 : clearIndicatorSlotProps.className),\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(AutocompletePopupIndicator, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              "aria-label": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              ownerState: ownerState\n            }, popupIndicatorSlotProps, {\n              className: (0,clsx__WEBPACK_IMPORTED_MODULE_3__["default"])(classes.popupIndicator, popupIndicatorSlotProps == null ? void 0 : popupIndicatorSlotProps.className),\n              children: popupIcon\n            })) : null]\n          })\n        }),\n        inputProps: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({\n          className: classes.input,\n          disabled,\n          readOnly\n        }, getInputProps())\n      })\n    })), anchorEl ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(AutocompletePopper, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({\n      as: PopperComponent,\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      ownerState: ownerState,\n      role: "presentation",\n      anchorEl: anchorEl,\n      open: popupOpen\n    }, popperSlotProps, {\n      className: (0,clsx__WEBPACK_IMPORTED_MODULE_3__["default"])(classes.popper, popperSlotProps == null ? void 0 : popperSlotProps.className),\n      children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(AutocompletePaper, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({\n        ownerState: ownerState,\n        as: PaperComponent\n      }, paperSlotProps, {\n        className: (0,clsx__WEBPACK_IMPORTED_MODULE_3__["default"])(classes.paper, paperSlotProps == null ? void 0 : paperSlotProps.className),\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(AutocompleteLoading, {\n          className: classes.loading,\n          ownerState: ownerState,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          ownerState: ownerState,\n          role: "presentation",\n          onMouseDown: event => {\n            // Prevent input blur when interacting with the "no options" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(AutocompleteListbox, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({\n          as: ListboxComponent,\n          className: classes.listbox,\n          ownerState: ownerState\n        }, otherListboxProps, ListboxProps, {\n          ref: combinedListboxRef,\n          children: groupedOptions.map((option, index) => {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n              });\n            }\n            return renderListOption(option, index);\n          })\n        })) : null]\n      }))\n    })) : null]\n  });\n});\n true ? Autocomplete.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run "yarn proptypes"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().bool),\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().bool),\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   *\n   * When using `freeSolo` mode, the typed value will be the input value\n   * if the Autocomplete loses focus without highlighting an option.\n   * @default false\n   */\n  autoSelect: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().bool),\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: prop_types__WEBPACK_IMPORTED_MODULE_24___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_24___default().oneOf([\'mouse\', \'touch\']), (prop_types__WEBPACK_IMPORTED_MODULE_24___default().bool)]),\n  /**\n   * Props applied to the [`Chip`](/material-ui/api/chip/) element.\n   */\n  ChipProps: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().object),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().object),\n  /**\n   * @ignore\n   */\n  className: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().string),\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize="small" />\n   */\n  clearIcon: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().node),\n  /**\n   * If `true`, the input\'s text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume their search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().bool),\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().bool),\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default \'Clear\'\n   */\n  clearText: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().string),\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default \'Close\'\n   */\n  closeText: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().string),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: prop_types__WEBPACK_IMPORTED_MODULE_24___default().shape({\n    clearIndicator: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().object),\n    paper: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().object),\n    popper: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().object),\n    popupIndicator: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().object)\n  }),\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: (0,_mui_utils__WEBPACK_IMPORTED_MODULE_25__["default"])((prop_types__WEBPACK_IMPORTED_MODULE_24___default().any), props => {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error([\'MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.\', `However, ${props.defaultValue} was provided.`].join(\'\\n\'));\n    }\n    return null;\n  }),\n  /**\n   * If `true`, the input can\'t be cleared.\n   * @default false\n   */\n  disableClearable: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().bool),\n  /**\n   * If `true`, the popup won\'t close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().bool),\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().bool),\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().bool),\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().bool),\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().bool),\n  /**\n   * A function that determines the filtered options to be rendered on search.\n   *\n   * @default createFilterOptions()\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().func),\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().bool),\n  /**\n   * Force the visibility display of the popup icon.\n   * @default \'auto\'\n   */\n  forcePopupIcon: prop_types__WEBPACK_IMPORTED_MODULE_24___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_24___default().oneOf([\'auto\']), (prop_types__WEBPACK_IMPORTED_MODULE_24___default().bool)]),\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().bool),\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().bool),\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().func),\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().func),\n  /**\n   * Used to determine the string value for a given option.\n   * It\'s used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * If used in free solo mode, it must accept both the type of the options and a string.\n   *\n   * @param {T} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().func),\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().func),\n  /**\n   * If `true`, the component handles the "Home" and "End" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().bool),\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don\'t provide an id it will fall back to a randomly generated one.\n   */\n  id: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().string),\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().bool),\n  /**\n   * The input value.\n   */\n  inputValue: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().string),\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().func),\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: _mui_utils__WEBPACK_IMPORTED_MODULE_26__["default"],\n  /**\n   * The component used to render the listbox.\n   * @default \'ul\'\n   */\n  ListboxComponent: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().elementType),\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().object),\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).\n   * @default false\n   */\n  loading: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().bool),\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default \'Loading…\'\n   */\n  loadingText: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().node),\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().bool),\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default \'No options\'\n   */\n  noOptionsText: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().node),\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of "createOption", "selectOption", "removeOption", "blur" or "clear".\n   * @param {string} [details]\n   */\n  onChange: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().func),\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `"toggleInput"`, `"escape"`, `"selectOption"`, `"removeOption"`, `"blur"`.\n   */\n  onClose: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().func),\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `"keyboard"`, `"auto"`, `"mouse"`, `"touch"`.\n   */\n  onHighlightChange: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().func),\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `"input"` (user input), `"reset"` (programmatic change), `"clear"`.\n   */\n  onInputChange: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().func),\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().func),\n  /**\n   * If `true`, the component is shown.\n   */\n  open: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().bool),\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().bool),\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default \'Open\'\n   */\n  openText: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().string),\n  /**\n   * Array of options.\n   */\n  options: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().array).isRequired,\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().elementType),\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().elementType),\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().node),\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().bool),\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().func),\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().func).isRequired,\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().func),\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderTags: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().func),\n  /**\n   * If `true`, the input\'s text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().bool),\n  /**\n   * The size of the component.\n   * @default \'medium\'\n   */\n  size: prop_types__WEBPACK_IMPORTED_MODULE_24___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_24___default().oneOf([\'small\', \'medium\']), (prop_types__WEBPACK_IMPORTED_MODULE_24___default().string)]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: prop_types__WEBPACK_IMPORTED_MODULE_24___default().shape({\n    clearIndicator: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().object),\n    paper: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().object),\n    popper: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().object),\n    popupIndicator: (prop_types__WEBPACK_IMPORTED_MODULE_24___default().object)\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: prop_types__WEBPACK_IMPORTED_MODULE_24___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_24___default().arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_24___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_24___default().func), (prop_types__WEBPACK_IMPORTED_MODULE_24___default().object), (prop_types__WEBPACK_IMPORTED_MODULE_24___default().bool)])), (prop_types__WEBPACK_IMPORTED_MODULE_24___default().func), (prop_types__WEBPACK_IMPORTED_MODULE_24___default().object)]),\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: (0,_mui_utils__WEBPACK_IMPORTED_MODULE_25__["default"])((prop_types__WEBPACK_IMPORTED_MODULE_24___default().any), props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error([\'MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.\', `However, ${props.value} was provided.`].join(\'\\n\'));\n    }\n    return null;\n  })\n} : 0;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Autocomplete);\n\n//# sourceURL=webpack://frontend/./node_modules/@mui/material/Autocomplete/Autocomplete.js?')},"./node_modules/@mui/material/Autocomplete/autocompleteClasses.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getAutocompleteUtilityClass: () => (/* binding */ getAutocompleteUtilityClass)\n/* harmony export */ });\n/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mui/utils */ \"./node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js\");\n/* harmony import */ var _generateUtilityClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../generateUtilityClass */ \"./node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js\");\n\n\nfunction getAutocompleteUtilityClass(slot) {\n  return (0,_generateUtilityClass__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('MuiAutocomplete', slot);\n}\nconst autocompleteClasses = (0,_mui_utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"])('MuiAutocomplete', ['root', 'expanded', 'fullWidth', 'focused', 'focusVisible', 'tag', 'tagSizeSmall', 'tagSizeMedium', 'hasPopupIcon', 'hasClearIcon', 'inputRoot', 'input', 'inputFocused', 'endAdornment', 'clearIndicator', 'popupIndicator', 'popupIndicatorOpen', 'popper', 'popperDisablePortal', 'paper', 'listbox', 'loading', 'noOptions', 'option', 'groupLabel', 'groupUl']);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (autocompleteClasses);\n\n//# sourceURL=webpack://frontend/./node_modules/@mui/material/Autocomplete/autocompleteClasses.js?")},"./node_modules/@mui/material/ListSubheader/ListSubheader.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js");\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! clsx */ "./node_modules/clsx/dist/clsx.m.js");\n/* harmony import */ var _mui_base__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @mui/base */ "./node_modules/@mui/utils/esm/composeClasses/composeClasses.js");\n/* harmony import */ var _styles_styled__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../styles/styled */ "./node_modules/@mui/material/styles/styled.js");\n/* harmony import */ var _styles_useThemeProps__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../styles/useThemeProps */ "./node_modules/@mui/material/styles/useThemeProps.js");\n/* harmony import */ var _utils_capitalize__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/capitalize */ "./node_modules/@mui/material/utils/capitalize.js");\n/* harmony import */ var _listSubheaderClasses__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./listSubheaderClasses */ "./node_modules/@mui/material/ListSubheader/listSubheaderClasses.js");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");\n\n\nconst _excluded = ["className", "color", "component", "disableGutters", "disableSticky", "inset"];\n\n\n\n\n\n\n\n\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    disableGutters,\n    inset,\n    disableSticky\n  } = ownerState;\n  const slots = {\n    root: [\'root\', color !== \'default\' && `color${(0,_utils_capitalize__WEBPACK_IMPORTED_MODULE_5__["default"])(color)}`, !disableGutters && \'gutters\', inset && \'inset\', !disableSticky && \'sticky\']\n  };\n  return (0,_mui_base__WEBPACK_IMPORTED_MODULE_6__["default"])(slots, _listSubheaderClasses__WEBPACK_IMPORTED_MODULE_7__.getListSubheaderUtilityClass, classes);\n};\nconst ListSubheaderRoot = (0,_styles_styled__WEBPACK_IMPORTED_MODULE_8__["default"])(\'li\', {\n  name: \'MuiListSubheader\',\n  slot: \'Root\',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== \'default\' && styles[`color${(0,_utils_capitalize__WEBPACK_IMPORTED_MODULE_5__["default"])(ownerState.color)}`], !ownerState.disableGutters && styles.gutters, ownerState.inset && styles.inset, !ownerState.disableSticky && styles.sticky];\n  }\n})(({\n  theme,\n  ownerState\n}) => (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({\n  boxSizing: \'border-box\',\n  lineHeight: \'48px\',\n  listStyle: \'none\',\n  color: (theme.vars || theme).palette.text.secondary,\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(14)\n}, ownerState.color === \'primary\' && {\n  color: (theme.vars || theme).palette.primary.main\n}, ownerState.color === \'inherit\' && {\n  color: \'inherit\'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.inset && {\n  paddingLeft: 72\n}, !ownerState.disableSticky && {\n  position: \'sticky\',\n  top: 0,\n  zIndex: 1,\n  backgroundColor: (theme.vars || theme).palette.background.paper\n}));\nconst ListSubheader = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2__.forwardRef(function ListSubheader(inProps, ref) {\n  const props = (0,_styles_useThemeProps__WEBPACK_IMPORTED_MODULE_9__["default"])({\n    props: inProps,\n    name: \'MuiListSubheader\'\n  });\n  const {\n      className,\n      color = \'default\',\n      component = \'li\',\n      disableGutters = false,\n      disableSticky = false,\n      inset = false\n    } = props,\n    other = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__["default"])(props, _excluded);\n  const ownerState = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({}, props, {\n    color,\n    component,\n    disableGutters,\n    disableSticky,\n    inset\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(ListSubheaderRoot, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__["default"])({\n    as: component,\n    className: (0,clsx__WEBPACK_IMPORTED_MODULE_3__["default"])(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nListSubheader.muiSkipListHighlight = true;\n true ? ListSubheader.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run "yarn proptypes"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: (prop_types__WEBPACK_IMPORTED_MODULE_10___default().node),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: (prop_types__WEBPACK_IMPORTED_MODULE_10___default().object),\n  /**\n   * @ignore\n   */\n  className: (prop_types__WEBPACK_IMPORTED_MODULE_10___default().string),\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default \'default\'\n   */\n  color: prop_types__WEBPACK_IMPORTED_MODULE_10___default().oneOf([\'default\', \'inherit\', \'primary\']),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: (prop_types__WEBPACK_IMPORTED_MODULE_10___default().elementType),\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   * @default false\n   */\n  disableGutters: (prop_types__WEBPACK_IMPORTED_MODULE_10___default().bool),\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   * @default false\n   */\n  disableSticky: (prop_types__WEBPACK_IMPORTED_MODULE_10___default().bool),\n  /**\n   * If `true`, the List Subheader is indented.\n   * @default false\n   */\n  inset: (prop_types__WEBPACK_IMPORTED_MODULE_10___default().bool),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: prop_types__WEBPACK_IMPORTED_MODULE_10___default().oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_10___default().arrayOf(prop_types__WEBPACK_IMPORTED_MODULE_10___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_10___default().func), (prop_types__WEBPACK_IMPORTED_MODULE_10___default().object), (prop_types__WEBPACK_IMPORTED_MODULE_10___default().bool)])), (prop_types__WEBPACK_IMPORTED_MODULE_10___default().func), (prop_types__WEBPACK_IMPORTED_MODULE_10___default().object)])\n} : 0;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ListSubheader);\n\n//# sourceURL=webpack://frontend/./node_modules/@mui/material/ListSubheader/ListSubheader.js?')},"./node_modules/@mui/material/ListSubheader/listSubheaderClasses.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getListSubheaderUtilityClass: () => (/* binding */ getListSubheaderUtilityClass)\n/* harmony export */ });\n/* harmony import */ var _mui_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mui/utils */ \"./node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js\");\n/* harmony import */ var _generateUtilityClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../generateUtilityClass */ \"./node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js\");\n\n\nfunction getListSubheaderUtilityClass(slot) {\n  return (0,_generateUtilityClass__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('MuiListSubheader', slot);\n}\nconst listSubheaderClasses = (0,_mui_utils__WEBPACK_IMPORTED_MODULE_1__[\"default\"])('MuiListSubheader', ['root', 'colorPrimary', 'colorInherit', 'gutters', 'inset', 'sticky']);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (listSubheaderClasses);\n\n//# sourceURL=webpack://frontend/./node_modules/@mui/material/ListSubheader/listSubheaderClasses.js?")},"./node_modules/@mui/utils/esm/usePreviousProps.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nconst usePreviousProps = value => {\n  const ref = react__WEBPACK_IMPORTED_MODULE_0__.useRef({});\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (usePreviousProps);\n\n//# sourceURL=webpack://frontend/./node_modules/@mui/utils/esm/usePreviousProps.js?')}}]);